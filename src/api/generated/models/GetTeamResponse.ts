/* tslint:disable */
/* eslint-disable */
/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * The representation of a team in responses.
 * @export
 * @interface GetTeamResponse
 */
export interface GetTeamResponse {
  /**
   * Gets or sets the id of the team dto.
   * @type {number}
   * @memberof GetTeamResponse
   */
  id: number;
  /**
   * Gets or sets the name of the team dto. This property is required and unique.
   * @type {string}
   * @memberof GetTeamResponse
   */
  teamName: string;
  /**
   * Gets or sets the business unit associated with the team. This property is required.
   * @type {string}
   * @memberof GetTeamResponse
   */
  businessUnit: string;
  /**
   * Gets or sets the business unit associated with the team. This property is required.
   * @type {string}
   * @memberof GetTeamResponse
   */
  ptl?: string | null;
}

/**
 * Check if a given object implements the GetTeamResponse interface.
 */
export function instanceOfGetTeamResponse(
  value: object,
): value is GetTeamResponse {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('teamName' in value) || value['teamName'] === undefined) return false;
  if (!('businessUnit' in value) || value['businessUnit'] === undefined)
    return false;
  return true;
}

export function GetTeamResponseFromJSON(json: any): GetTeamResponse {
  return GetTeamResponseFromJSONTyped(json, false);
}

export function GetTeamResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetTeamResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    teamName: json['teamName'],
    businessUnit: json['businessUnit'],
    ptl: json['ptl'] == null ? undefined : json['ptl'],
  };
}

export function GetTeamResponseToJSON(json: any): GetTeamResponse {
  return GetTeamResponseToJSONTyped(json, false);
}

export function GetTeamResponseToJSONTyped(
  value?: GetTeamResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    teamName: value['teamName'],
    businessUnit: value['businessUnit'],
    ptl: value['ptl'],
  };
}
