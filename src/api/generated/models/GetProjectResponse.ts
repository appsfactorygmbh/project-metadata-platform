/* tslint:disable */
/* eslint-disable */
/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { GetTeamResponse } from './GetTeamResponse';
import {
  GetTeamResponseFromJSON,
  GetTeamResponseToJSON,
} from './GetTeamResponse';
import type { SecurityLevel } from './SecurityLevel';
import { SecurityLevelFromJSON, SecurityLevelToJSON } from './SecurityLevel';
import type { CompanyState } from './CompanyState';
import { CompanyStateFromJSON, CompanyStateToJSON } from './CompanyState';

/**
 * Represents a response to the GetProject API call.
 * @export
 * @interface GetProjectResponse
 */
export interface GetProjectResponse {
  /**
   * The identification number for the project.
   * @type {number}
   * @memberof GetProjectResponse
   */
  id: number;
  /**
   * The Slug for the project name.
   * @type {string}
   * @memberof GetProjectResponse
   */
  slug: string;
  /**
   *
   * @type {string}
   * @memberof GetProjectResponse
   */
  projectName: string;
  /**
   *
   * @type {string}
   * @memberof GetProjectResponse
   */
  clientName: string;
  /**
   * Internal id of the offer associated with the project.
   * @type {string}
   * @memberof GetProjectResponse
   */
  offerId: string;
  /**
   * The company that is responsible for the project.
   * @type {string}
   * @memberof GetProjectResponse
   */
  company: string;
  /**
   * If the project is archived or not.
   * @type {boolean}
   * @memberof GetProjectResponse
   */
  isArchived: boolean;
  /**
   *
   * @type {GetTeamResponse}
   * @memberof GetProjectResponse
   */
  team: GetTeamResponse;
  /**
   *
   * @type {CompanyState}
   * @memberof GetProjectResponse
   */
  companyState: CompanyState;
  /**
   *
   * @type {SecurityLevel}
   * @memberof GetProjectResponse
   */
  ismsLevel: SecurityLevel;
}

/**
 * Check if a given object implements the GetProjectResponse interface.
 */
export function instanceOfGetProjectResponse(
  value: object,
): value is GetProjectResponse {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('slug' in value) || value['slug'] === undefined) return false;
  if (!('projectName' in value) || value['projectName'] === undefined)
    return false;
  if (!('clientName' in value) || value['clientName'] === undefined)
    return false;
  if (!('offerId' in value) || value['offerId'] === undefined) return false;
  if (!('company' in value) || value['company'] === undefined) return false;
  if (!('isArchived' in value) || value['isArchived'] === undefined)
    return false;
  if (!('team' in value) || value['team'] === undefined) return false;
  if (!('companyState' in value) || value['companyState'] === undefined)
    return false;
  if (!('ismsLevel' in value) || value['ismsLevel'] === undefined) return false;
  return true;
}

export function GetProjectResponseFromJSON(json: any): GetProjectResponse {
  return GetProjectResponseFromJSONTyped(json, false);
}

export function GetProjectResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetProjectResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    slug: json['slug'],
    projectName: json['projectName'],
    clientName: json['clientName'],
    offerId: json['offerId'],
    company: json['company'],
    isArchived: json['isArchived'],
    team: GetTeamResponseFromJSON(json['team']),
    companyState: CompanyStateFromJSON(json['companyState']),
    ismsLevel: SecurityLevelFromJSON(json['ismsLevel']),
  };
}

export function GetProjectResponseToJSON(json: any): GetProjectResponse {
  return GetProjectResponseToJSONTyped(json, false);
}

export function GetProjectResponseToJSONTyped(
  value?: GetProjectResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    slug: value['slug'],
    projectName: value['projectName'],
    clientName: value['clientName'],
    offerId: value['offerId'],
    company: value['company'],
    isArchived: value['isArchived'],
    team: GetTeamResponseToJSON(value['team']),
    companyState: CompanyStateToJSON(value['companyState']),
    ismsLevel: SecurityLevelToJSON(value['ismsLevel']),
  };
}
