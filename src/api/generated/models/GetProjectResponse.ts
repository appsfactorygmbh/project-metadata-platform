/* tslint:disable */

/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents a response to the GetProject API call.
 * @export
 * @interface GetProjectResponse
 */
export interface GetProjectResponse {
    /**
     * The identification number for the project.
     * @type {number}
     * @memberof GetProjectResponse
     */
    id: number;
    /**
     * The Slug for the project name.
     * @type {string}
     * @memberof GetProjectResponse
     */
    slug: string;
    /**
     * The name of the project.
     * @type {string}
     * @memberof GetProjectResponse
     */
    projectName: string;
    /**
     * The name of the client for the project.
     * @type {string}
     * @memberof GetProjectResponse
     */
    clientName: string;
    /**
     * The name of the Business Unit associated with the project.
     * @type {string}
     * @memberof GetProjectResponse
     */
    businessUnit: string;
    /**
     * The number of the team working on the project.
     * @type {number}
     * @memberof GetProjectResponse
     */
    teamNumber: number;
    /**
     * The name of the department associated with the project.
     * @type {string}
     * @memberof GetProjectResponse
     */
    department: string;
    /**
     * If the project is archived or not.
     * @type {boolean}
     * @memberof GetProjectResponse
     */
    isArchived: boolean;
}

/**
 * Check if a given object implements the GetProjectResponse interface.
 */
export function instanceOfGetProjectResponse(value: object): value is GetProjectResponse {
  return ["id", "slug", "projectName", "clientName", "businessUnit", "teamNumber", "department", "isArchived"]
    .every(key => key in value && (value as any)[key] !== undefined);
}

export function GetProjectResponseFromJSON(json: any): GetProjectResponse {
    return GetProjectResponseFromJSONTyped(json, false);
}

export function GetProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProjectResponse {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'slug': json['slug'],
        'projectName': json['projectName'],
        'clientName': json['clientName'],
        'businessUnit': json['businessUnit'],
        'teamNumber': json['teamNumber'],
        'department': json['department'],
        'isArchived': json['isArchived'],
    };
}

export function GetProjectResponseToJSON(json: any): GetProjectResponse {
    return GetProjectResponseToJSONTyped(json, false);
}

export function GetProjectResponseToJSONTyped(value?: GetProjectResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'slug': value['slug'],
        'projectName': value['projectName'],
        'clientName': value['clientName'],
        'businessUnit': value['businessUnit'],
        'teamNumber': value['teamNumber'],
        'department': value['department'],
        'isArchived': value['isArchived'],
    };
}

