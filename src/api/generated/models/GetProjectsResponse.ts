/* tslint:disable */
/* eslint-disable */
/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents a response for the GetProjects API call.
 * @export
 * @interface GetProjectsResponse
 */
export interface GetProjectsResponse {
    /**
     * The id of the project.
     * @type {number}
     * @memberof GetProjectsResponse
     */
    id: number;
    /**
     * The name of the project.
     * @type {string}
     * @memberof GetProjectsResponse
     */
    projectName: string;
    /**
     * The name of the client associated with the project.
     * @type {string}
     * @memberof GetProjectsResponse
     */
    clientName: string;
    /**
     * The business unit the project belongs to.
     * @type {string}
     * @memberof GetProjectsResponse
     */
    businessUnit: string;
    /**
     * The number of the team working on the project.
     * @type {number}
     * @memberof GetProjectsResponse
     */
    teamNumber: number;
    /**
     * If the project is archived or not.
     * @type {boolean}
     * @memberof GetProjectsResponse
     */
    isArchived: boolean;
}

/**
 * Check if a given object implements the GetProjectsResponse interface.
 */
export function instanceOfGetProjectsResponse(value: object): value is GetProjectsResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('projectName' in value) || value['projectName'] === undefined) return false;
    if (!('clientName' in value) || value['clientName'] === undefined) return false;
    if (!('businessUnit' in value) || value['businessUnit'] === undefined) return false;
    if (!('teamNumber' in value) || value['teamNumber'] === undefined) return false;
    if (!('isArchived' in value) || value['isArchived'] === undefined) return false;
    return true;
}

export function GetProjectsResponseFromJSON(json: any): GetProjectsResponse {
    return GetProjectsResponseFromJSONTyped(json, false);
}

export function GetProjectsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProjectsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'projectName': json['projectName'],
        'clientName': json['clientName'],
        'businessUnit': json['businessUnit'],
        'teamNumber': json['teamNumber'],
        'isArchived': json['isArchived'],
    };
}

  export function GetProjectsResponseToJSON(json: any): GetProjectsResponse {
      return GetProjectsResponseToJSONTyped(json, false);
  }

  export function GetProjectsResponseToJSONTyped(value?: GetProjectsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'projectName': value['projectName'],
        'clientName': value['clientName'],
        'businessUnit': value['businessUnit'],
        'teamNumber': value['teamNumber'],
        'isArchived': value['isArchived'],
    };
}

