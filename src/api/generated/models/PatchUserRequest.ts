/* tslint:disable */
 
/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents a request model for patching user information.
 * @export
 * @interface PatchUserRequest
 */
export interface PatchUserRequest {
    /**
     * The new username of the user, or null to leave unchanged.
     * @type {string}
     * @memberof PatchUserRequest
     */
    username?: string | null;
    /**
     * The new name of the user, or null to leave unchanged.
     * @type {string}
     * @memberof PatchUserRequest
     */
    name?: string | null;
    /**
     * The new email address of the user, or null to leave unchanged.
     * @type {string}
     * @memberof PatchUserRequest
     */
    email?: string | null;
    /**
     * The new password of the user, or null to leave unchanged.
     * @type {string}
     * @memberof PatchUserRequest
     */
    password?: string | null;
}

/**
 * Check if a given object implements the PatchUserRequest interface.
 */
export function instanceOfPatchUserRequest(value: object): value is PatchUserRequest {
    return true;
}

export function PatchUserRequestFromJSON(json: any): PatchUserRequest {
    return PatchUserRequestFromJSONTyped(json, false);
}

export function PatchUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'] == null ? undefined : json['username'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
        'password': json['password'] == null ? undefined : json['password'],
    };
}

  export function PatchUserRequestToJSON(json: any): PatchUserRequest {
      return PatchUserRequestToJSONTyped(json, false);
  }

  export function PatchUserRequestToJSONTyped(value?: PatchUserRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'name': value['name'],
        'email': value['email'],
        'password': value['password'],
    };
}

