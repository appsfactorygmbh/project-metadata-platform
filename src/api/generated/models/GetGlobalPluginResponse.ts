/* tslint:disable */
/* eslint-disable */
/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Response Model representing a Plugin.
 * @export
 * @interface GetGlobalPluginResponse
 */
export interface GetGlobalPluginResponse {
    /**
     * Name of the plugin
     * @type {string}
     * @memberof GetGlobalPluginResponse
     */
    name: string;
    /**
     * Id of the plugin
     * @type {number}
     * @memberof GetGlobalPluginResponse
     */
    id: number;
    /**
     * If the plugin is archived or not
     * @type {boolean}
     * @memberof GetGlobalPluginResponse
     */
    isArchived: boolean;
    /**
     * empty array keys
     * @type {Array<string>}
     * @memberof GetGlobalPluginResponse
     */
    keys: Array<string>;
    /**
     * Base URL of the plugin
     * @type {string}
     * @memberof GetGlobalPluginResponse
     */
    baseUrl: string;
}

/**
 * Check if a given object implements the GetGlobalPluginResponse interface.
 */
export function instanceOfGetGlobalPluginResponse(value: object): value is GetGlobalPluginResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isArchived' in value) || value['isArchived'] === undefined) return false;
    if (!('keys' in value) || value['keys'] === undefined) return false;
    return true;
}

export function GetGlobalPluginResponseFromJSON(json: any): GetGlobalPluginResponse {
    return GetGlobalPluginResponseFromJSONTyped(json, false);
}

export function GetGlobalPluginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetGlobalPluginResponse {
    if (json == null) {
        return json;
    }
    return {

        'name': json['name'],
        'id': json['id'],
        'isArchived': json['isArchived'],
        'keys': json['keys'],
        'baseUrl': json['baseUrl'] == null ? undefined : json['baseUrl'],
    };
}

export function GetGlobalPluginResponseToJSON(json: any): GetGlobalPluginResponse {
    return GetGlobalPluginResponseToJSONTyped(json, false);
}

export function GetGlobalPluginResponseToJSONTyped(value?: GetGlobalPluginResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'name': value['name'],
        'id': value['id'],
        'isArchived': value['isArchived'],
        'keys': value['keys'],
        'baseUrl': value['baseUrl'],
    };
}

