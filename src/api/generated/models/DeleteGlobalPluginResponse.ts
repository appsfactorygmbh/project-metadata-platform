/* tslint:disable */
/* eslint-disable */
/**
 * ProjectMetadataPlatform.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Response for deleting a plugin.
 * @export
 * @interface DeleteGlobalPluginResponse
 */
export interface DeleteGlobalPluginResponse {
    /**
     * The id of the plugin.
     * @type {number}
     * @memberof DeleteGlobalPluginResponse
     */
    pluginId: number;
    /**
     * The status whether the plugin is archived.
     * @type {boolean}
     * @memberof DeleteGlobalPluginResponse
     */
    isArchived: boolean;
}

/**
 * Check if a given object implements the DeleteGlobalPluginResponse interface.
 */
export function instanceOfDeleteGlobalPluginResponse(value: object): value is DeleteGlobalPluginResponse {
    if (!('pluginId' in value) || value['pluginId'] === undefined) return false;
    if (!('isArchived' in value) || value['isArchived'] === undefined) return false;
    return true;
}

export function DeleteGlobalPluginResponseFromJSON(json: any): DeleteGlobalPluginResponse {
    return DeleteGlobalPluginResponseFromJSONTyped(json, false);
}

export function DeleteGlobalPluginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteGlobalPluginResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'pluginId': json['pluginId'],
        'isArchived': json['isArchived'],
    };
}

  export function DeleteGlobalPluginResponseToJSON(json: any): DeleteGlobalPluginResponse {
      return DeleteGlobalPluginResponseToJSONTyped(json, false);
  }

  export function DeleteGlobalPluginResponseToJSONTyped(value?: DeleteGlobalPluginResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pluginId': value['pluginId'],
        'isArchived': value['isArchived'],
    };
}

