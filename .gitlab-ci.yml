stages:
  - test
  - build
  - deploy
  - release

default:
  image: node:20-alpine
  before_script:
    # Install yarn as outlined in (https://yarnpkg.com/lang/en/docs/install/#alternatives-stable)
    - npm install -g corepack
    - corepack enable
    - yarn install --immutable
  cache:
    paths:
      - .yarn
      - node_modules

variables:
  DEVELOP_BRANCH: develop

include:
  - project: 'projekt2024_A_Appsfactory_Project_Metadata_Platform/templates'
    ref: main
    file: 'pipeline/all.yml'

test:
  stage: test
  image: node:latest
  script:
    - yarn test --reporter=junit --outputFile=./junit.xml
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
      junit:
        - junit.xml

type-check:
  stage: test
  script:
    - yarn type-check

code-formatting:
  stage: test
  allow_failure: true
  script:
    - npm install -g prettier
    - prettier --check .

code-quality:
  stage: test
  script:
    - npx eslint --format gitlab .
  allow_failure: true
  artifacts:
    reports:
      codequality: gl-codequality.json

sonarqube:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: ['']
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
    GIT_DEPTH: '0'
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  before_script:
    - sonar-scanner --version
  script:
    - sonar-scanner
  allow_failure: true
  # Only run on develop branch since we have es-lint for MRs and the HTWK SonarQube instance does not support MR analysis
  rules:
    - if: $CI_COMMIT_BRANCH == $DEVELOP_BRANCH
