stages:
  - test
  - build
  - deploy

variables:
  DEVELOP_BRANCH: develop

include:
  - project: 'projekt2024_A_Appsfactory_Project_Metadata_Platform/templates'
    ref: main
    file: 'pipeline/all.yml'

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet test --configuration Release --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml

code-quality:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:8.0
  variables:
    DOTNET_ROLL_FORWARD: Major
  script: 
    - 'dotnet tool restore'
    - 'dotnet build --configuration Release'
    - 'export DIR=file://$(pwd)'
    - 'dotnet tool run cq sarif ProjectMetadataPlatform.Domain/bin/codeanalysis.sarif.json gl-code-quality-report1.json $DIR'
    - 'dotnet tool run cq sarif ProjectMetadataPlatform.Application/bin/codeanalysis.sarif.json gl-code-quality-report2.json $DIR'
    - 'dotnet tool run cq sarif ProjectMetadataPlatform.Infrastructure/bin/codeanalysis.sarif.json gl-code-quality-report3.json $DIR'
    - 'dotnet tool run cq sarif ProjectMetadataPlatform.Api/bin/codeanalysis.sarif.json gl-code-quality-report4.json $DIR'
    - 'dotnet tool run cq merge gl-code-quality-report.json gl-code-quality-report1.json gl-code-quality-report2.json gl-code-quality-report3.json gl-code-quality-report4.json'
  artifacts:
    paths:
      - gl-code-quality-report.json
    expose_as: 'code_quality_reports'
    reports:
      codequality: gl-code-quality-report.json
  rules:
    - if: $CI_COMMIT_BRANCH