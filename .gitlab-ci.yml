stages:
  - test
  - sonarqube
  - build
  - deploy

variables:
  DEVELOP_BRANCH: develop

include:
  - project: 'projekt2024_A_Appsfactory_Project_Metadata_Platform/templates'
    ref: main
    file: 'pipeline/all.yml'

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet restore
    - dotnet test --configuration Release --no-restore --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml

sonarqube:
  stage: sonarqube
  image: gitlab.dit.htwk-leipzig.de:5050/projekt2024_a_appsfactory_project_metadata_platform/backend/sonarqube-base
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
      - "/root/.dotnet/tools/dotnet-sonarscanner begin /k:\"Project-Metadata-Platform-Backend\" /d:sonar.token=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build --no-incremental --configuration Release"
      - "/root/.dotnet/tools/dotnet-sonarscanner end /d:sonar.token=\"$SONAR_TOKEN\""
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $DEVELOP_BRANCH