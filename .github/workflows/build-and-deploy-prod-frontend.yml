name: Build_and_Deploy_Project

on:
  workflow_run:
    workflows:
      - CI_Pipeline
    types:
      - completed
    branches:
      - main

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate date tag using Ubuntu 'date' command
        id: date
        run: echo "tag=$(date +'%Y.%m.%d-%H.%M')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:prod
            ghcr.io/${{ github.repository }}:${{ steps.date.outputs.tag }}
          build-args: |
            BUILD_ENV=production

  deploy-to-prod:
    name: Deploy to Production VM
    needs: build-and-push # Ensures this job runs only after build-and-push succeeds
    environment: production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Copy compose file to VM
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          source: 'docker-compose-production.yml'
          target: '~/pmp-frontend/'

      - name: Deploy on VM via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker compose -f ~/pmp-frontend/docker-compose-production.yml pull
            docker compose -f ~/pmp-frontend/docker-compose-production.yml up -d
