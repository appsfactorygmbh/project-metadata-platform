name: SonarCloud Analysis

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore packages (dotnet restore)
        run: dotnet restore

      - name: Restore .NET tools (dotnet tool restore)
        run: dotnet tool restore

      - name: Install CSharpier global tool
        run: |
          dotnet tool install --global csharpier
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Verify Formatting with CSharpier
        run: csharpier check ${{ github.workspace }}

      - name: Install SonarCloud .NET Global Tool
        run: dotnet tool install --global dotnet-sonarscanner --version 6.*

      - name: Install dotnet-coverage global tool
        run: dotnet tool install --global dotnet-coverage --version 1.*

      - name: Begin SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin
          /k:"YOUR_PROJECT_KEY"
          /o:"YOUR_ORGANIZATION_KEY"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.opencover.reportsPaths="**/coverage.cobertura.xml"
          /d:sonar.coverage.exclusions="**/Test*.cs,**/*Tests.cs"
          /d:sonar.qualitygate.wait=true

      - name: Build and Test
        run: |
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults --logger "trx" -- DataCollectionRunSettings.DataCollectors.XPlatCodeCoverage.Configuration.Format=Cobertura -- DataCollectionRunSettings.DataCollectors.XPlatCodeCoverage.Configuration.File=coverage.cobertura.xml

      - name: End SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Your SonarCloud token
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"