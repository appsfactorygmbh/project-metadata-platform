# See http://EditorConfig.org for more information about .editorconfig files.

##########################################
# Common Settings
##########################################

# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true
# All Files
# See: https://github.com/RehanSaeed/EditorConfig/blob/b9762b8bbeb16d9cb463848932a176925827f0fc/.editorconfig#L14-L20
[*]
charset = utf-8
indent_style = space
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true
# JSON Files
[*.{json,json5,webmanifest}]
indent_size = 2
# YAML Files
[*.{yml,yaml}]
indent_size = 2
# Markdown Files
[*.md]
trim_trailing_whitespace = false
# Shell scripts
# See: https://github.com/RehanSaeed/EditorConfig/blob/b9762b8bbeb16d9cb463848932a176925827f0fc/.editorconfig#L58-L60
[*.sh]
end_of_line = lf
# XML like Files
[{*.{cs,csproj,props,sln,targets,xml},nuget.config}]
#### Editor Guidelines options ####
# See the following extension: https://marketplace.visualstudio.com/items?itemName=PaulHarrington.EditorGuidelines
# Guidelines for maximum line length
guidelines = 120 1px dotted black

xml_linebreaks_inside_tags_for_elements_with_child_elements = true
xml_space_before_self_closing = false
xml_pi_attribute_style = do_not_touch
xml_insert_final_newline = false
xml_wrap_tags_and_pi = false

# New line preferences
end_of_line = crlf
# C# files
[*.cs]

#### .NET Coding Conventions ####

# .NET Style Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules#net-style-rules
# Default Severity for all .NET Code Style rules below
dotnet_analyzer_diagnostic.severity = warning

# "this." and "Me." qualifiers
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Constructor preferences
csharp_style_prefer_primary_constructors = false # fields in primary constructor of classes are mutable
dotnet_diagnostic.IDE0290.severity = none

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:warning
dotnet_style_readonly_field = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_diagnostic.IDE0058.severity = none # "Remove unnecessary expression value". May lead to code that is harder to read.

# conditional expressions and their IDE-code
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_diagnostic.IDE0045.severity = suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_diagnostic.IDE0046.severity = suggestion

# Null-checking preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# Undocumented
dotnet_style_operator_placement_when_wrapping = beginning_of_line:warning
csharp_style_prefer_null_check_over_type_check = true:warning
dotnet_style_namespace_match_folder = true:warning

# C# Style Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules#c-style-rules

# var preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:silent
dotnet_diagnostic.IDE0008.severity = none # Use explicit type instead of var

# Expression-bodied members
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion # Anmerkungen: Code besser lesbar mit "o is not x" statt !(o is x)
dotnet_diagnostic.IDE0010.severity = none # Add missing cases to switch statement

# Expression-level preferences
csharp_style_inlined_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_throw_expression = true:suggestion

# Code-block preferences
csharp_prefer_braces = when_multiline:warning
csharp_prefer_simple_using_statement = true:suggestion

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion

# namespace prefences
csharp_style_namespace_declarations = file_scoped:warning

# Unnecessary Code Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules

# .NET Unnecessary code rules
dotnet_code_quality_unused_parameters = all:warning
dotnet_remove_unnecessary_suppression_exclusions = none:warning

# C# Unnecessary code rules
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
dotnet_diagnostic.IDE0058.severity = none # Remove unused expression value
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
dotnet_diagnostic.IDE0059.severity = suggestion # Remove unnecessary value assignment

# .NET formatting rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#net-formatting-rules

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = none

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# CS1998: This async method lacks 'await'
# This should be ignored, as we have cases where we do no async stuff, but Task of something is returned. In these cases it is easier to ignore the warning.
dotnet_diagnostic.CS1998.severity = none


##########################################
# .NET Analyzer Rules
##########################################
# Forward the CancellationToken to the method or pass in 'CancellationToken.None' explicitly to indicate intentionally not propagating the token
dotnet_diagnostic.CA2016.severity = warning


# C# formatting rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#c-formatting-rules

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false # Anmerkungen: Anders, imo besser lesbar

# Spacing preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true


##########################################
# .NET Naming Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
##########################################

# Naming styles

dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# pascal_case_style - Define the PascalCase style
dotnet_naming_style.all_upper_style.capitalization = all_upper

# camel_case_style - Define the camelCase style
dotnet_naming_style.camel_case_style.capitalization = camel_case

# prefix_interface_with_i_style - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i_style.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i_style.required_prefix = I

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

# prefix_type_parameters_with_t_style - Generic Type Parameters must be PascalCase and the first character must be a 'T'
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization = pascal_case
dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix = T

# prefix_private_field_with_underscore_style - private fields should have a _ as prefix and in camelCase
dotnet_naming_style.prefix_private_field_with_underscore_style.capitalization = camel_case
dotnet_naming_style.prefix_private_field_with_underscore_style.required_prefix = _

# disallowed_style - Anything that has this style applied is marked as disallowed
dotnet_naming_style.disallowed_style.capitalization = pascal_case
dotnet_naming_style.disallowed_style.required_prefix = ____RULE_VIOLATION____
dotnet_naming_style.disallowed_style.required_suffix = ____RULE_VIOLATION____
# internal_error_style - This style should never occur... if it does, it indicates a bug in file or in the parser using the file
dotnet_naming_style.internal_error_style.capitalization = pascal_case
dotnet_naming_style.internal_error_style.required_prefix = ____INTERNAL_ERROR____
dotnet_naming_style.internal_error_style.required_suffix = ____INTERNAL_ERROR____

##########################################
# .NET Design Guideline Field Naming Rules
# Naming rules for fields follow the .NET Framework design guidelines
# https://docs.microsoft.com/dotnet/standard/design-guidelines/index
##########################################
# All constant fields must be ALL_UPPER
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.public_protected_constant_fields_group.required_modifiers = const
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_kinds = field
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.symbols = public_protected_constant_fields_group
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.style = all_upper_style
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.severity = warning
dotnet_diagnostic.CA1707.severity = none


# All static readonly fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.public_protected_static_readonly_fields_group.required_modifiers = static, readonly
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_kinds = field
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.symbols = public_protected_static_readonly_fields_group
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.severity = warning

# No non-private instance fields are allowed
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
dotnet_naming_symbols.fields_must_be_private_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.fields_must_be_private_group.applicable_kinds = field
dotnet_naming_rule.instance_fields_must_be_private_rule.symbols = fields_must_be_private_group
dotnet_naming_rule.instance_fields_must_be_private_rule.style = disallowed_style
dotnet_naming_rule.instance_fields_must_be_private_rule.severity = warning

# Private fields must be _camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md
dotnet_naming_symbols.private_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.private_fields_group.applicable_kinds = field
dotnet_naming_rule.private_fields_must_be_camel_case_rule.symbols = private_fields_group
dotnet_naming_rule.private_fields_must_be_camel_case_rule.style = prefix_private_field_with_underscore_style
dotnet_naming_rule.private_fields_must_be_camel_case_rule.severity = warning

# Local variables must be camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md
dotnet_naming_symbols.local_fields_group.applicable_accessibilities = local
dotnet_naming_symbols.local_fields_group.applicable_kinds = local
dotnet_naming_rule.local_fields_must_be_camel_case_rule.symbols = local_fields_group
dotnet_naming_rule.local_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.local_fields_must_be_camel_case_rule.severity = warning

# This rule should never fire.  However, it's included for at least two purposes:
# First, it helps to understand, reason about, and root-case certain types of issues, such as bugs in .editorconfig parsers.
# Second, it helps to raise immediate awareness if a new field type is added (as occurred recently in C#).
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_accessibilities = *
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_kinds = field
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.symbols = sanity_check_uncovered_field_case_group
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.style = internal_error_style
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.severity = error

##########################################
# Other Naming Rules
##########################################

# All of the following must be PascalCase:
# - Namespaces
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-namespaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Classes and Enumerations
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Delegates
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces#names-of-common-types
# - Constructors, Properties, Events, Methods
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-type-members
dotnet_naming_symbols.element_group.applicable_kinds = namespace, class, enum, struct, delegate, event, method, property
dotnet_naming_rule.element_rule.import_to_resharper = as_predefined
dotnet_naming_rule.element_rule.symbols = element_group
dotnet_naming_rule.element_rule.style = pascal_case_style
dotnet_naming_rule.element_rule.severity = warning

# Interfaces use PascalCase and are prefixed with uppercase 'I'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.interface_group.applicable_kinds = interface
dotnet_naming_rule.interface_rule.import_to_resharper = as_predefined
dotnet_naming_rule.interface_rule.symbols = interface_group
dotnet_naming_rule.interface_rule.style = prefix_interface_with_i_style
dotnet_naming_rule.interface_rule.severity = warning

# Generics Type Parameters use PascalCase and are prefixed with uppercase 'T'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.type_parameter_group.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameter_rule.import_to_resharper = as_predefined
dotnet_naming_rule.type_parameter_rule.symbols = type_parameter_group
dotnet_naming_rule.type_parameter_rule.style = prefix_type_parameters_with_t_style
dotnet_naming_rule.type_parameter_rule.severity = warning

# Function parameters use camelCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/naming-parameters
dotnet_naming_symbols.parameters_group.applicable_kinds = parameter
dotnet_naming_rule.parameters_rule.import_to_resharper = as_predefined
dotnet_naming_rule.parameters_rule.symbols = parameters_group
dotnet_naming_rule.parameters_rule.style = camel_case_style
dotnet_naming_rule.parameters_rule.severity = warning
##########################################
# Meziantou Analyzer Configuration
# Package: Meziantou.Analyzer
# URLs: https://github.com/meziantou/Meziantou.Analyzer?tab=readme-ov-file
##########################################
# Note: We only use the Rules: MA0045; MA0125; MA0126; MA0137; MA0138; MA0139;
##########################################
# Do not use blocking calls in a sync method (need to make calling method async)
dotnet_diagnostic.MA0045.severity = warning
# The list of log parameter types contains an invalid type (for the analyzer config)
# Log parameter type is not valid (Microsoft.Extensions.Logging)
dotnet_diagnostic.MA0124.severity = error
dotnet_diagnostic.MA0125.severity = warning
# The list of log parameter types contains a duplicate (for the analyzer config)
dotnet_diagnostic.MA0126.severity = warning
# Use 'Async' suffix when a method returns an awaitable type
dotnet_diagnostic.MA0137.severity = warning
# Do not use 'Async' suffix when a method does not return an awaitable type
dotnet_diagnostic.MA0138.severity = warning
# Log parameter type is not valid (Serilog)
dotnet_diagnostic.MA0139.severity = error
##########################################
dotnet_diagnostic.MA0001.severity = none
dotnet_diagnostic.MA0002.severity = none
dotnet_diagnostic.MA0003.severity = none
dotnet_diagnostic.MA0004.severity = none
dotnet_diagnostic.MA0005.severity = none
dotnet_diagnostic.MA0006.severity = none
dotnet_diagnostic.MA0007.severity = none
dotnet_diagnostic.MA0008.severity = none
dotnet_diagnostic.MA0009.severity = none
dotnet_diagnostic.MA0010.severity = none
dotnet_diagnostic.MA0011.severity = none
dotnet_diagnostic.MA0012.severity = none
dotnet_diagnostic.MA0013.severity = none
dotnet_diagnostic.MA0014.severity = none
dotnet_diagnostic.MA0015.severity = none
dotnet_diagnostic.MA0016.severity = none
dotnet_diagnostic.MA0017.severity = none
dotnet_diagnostic.MA0018.severity = none
dotnet_diagnostic.MA0019.severity = none
dotnet_diagnostic.MA0020.severity = none
dotnet_diagnostic.MA0021.severity = none
dotnet_diagnostic.MA0022.severity = none
dotnet_diagnostic.MA0023.severity = none
dotnet_diagnostic.MA0024.severity = none
dotnet_diagnostic.MA0025.severity = none
dotnet_diagnostic.MA0026.severity = none
dotnet_diagnostic.MA0027.severity = none
dotnet_diagnostic.MA0028.severity = none
dotnet_diagnostic.MA0029.severity = none
dotnet_diagnostic.MA0030.severity = none
dotnet_diagnostic.MA0031.severity = none
dotnet_diagnostic.MA0032.severity = none
dotnet_diagnostic.MA0033.severity = none
dotnet_diagnostic.MA0034.severity = none
dotnet_diagnostic.MA0035.severity = none
dotnet_diagnostic.MA0036.severity = none
dotnet_diagnostic.MA0037.severity = none
dotnet_diagnostic.MA0038.severity = none
dotnet_diagnostic.MA0039.severity = none
dotnet_diagnostic.MA0040.severity = none
dotnet_diagnostic.MA0041.severity = none
dotnet_diagnostic.MA0042.severity = none
dotnet_diagnostic.MA0043.severity = none
dotnet_diagnostic.MA0044.severity = none
dotnet_diagnostic.MA0046.severity = none
dotnet_diagnostic.MA0047.severity = none
dotnet_diagnostic.MA0048.severity = none
dotnet_diagnostic.MA0049.severity = none
dotnet_diagnostic.MA0050.severity = none
dotnet_diagnostic.MA0051.severity = none
dotnet_diagnostic.MA0052.severity = none
dotnet_diagnostic.MA0053.severity = none
dotnet_diagnostic.MA0054.severity = none
dotnet_diagnostic.MA0055.severity = none
dotnet_diagnostic.MA0056.severity = none
dotnet_diagnostic.MA0057.severity = none
dotnet_diagnostic.MA0058.severity = none
dotnet_diagnostic.MA0059.severity = none
dotnet_diagnostic.MA0060.severity = none
dotnet_diagnostic.MA0061.severity = none
dotnet_diagnostic.MA0062.severity = none
dotnet_diagnostic.MA0063.severity = none
dotnet_diagnostic.MA0064.severity = none
dotnet_diagnostic.MA0065.severity = none
dotnet_diagnostic.MA0066.severity = none
dotnet_diagnostic.MA0067.severity = none
dotnet_diagnostic.MA0068.severity = none
dotnet_diagnostic.MA0069.severity = none
dotnet_diagnostic.MA0070.severity = none
dotnet_diagnostic.MA0071.severity = none
dotnet_diagnostic.MA0072.severity = none
dotnet_diagnostic.MA0073.severity = none
dotnet_diagnostic.MA0074.severity = none
dotnet_diagnostic.MA0075.severity = none
dotnet_diagnostic.MA0076.severity = none
dotnet_diagnostic.MA0077.severity = none
dotnet_diagnostic.MA0078.severity = none
dotnet_diagnostic.MA0079.severity = none
dotnet_diagnostic.MA0080.severity = none
dotnet_diagnostic.MA0081.severity = none
dotnet_diagnostic.MA0082.severity = none
dotnet_diagnostic.MA0083.severity = none
dotnet_diagnostic.MA0084.severity = none
dotnet_diagnostic.MA0085.severity = none
dotnet_diagnostic.MA0086.severity = none
dotnet_diagnostic.MA0087.severity = none
dotnet_diagnostic.MA0088.severity = none
dotnet_diagnostic.MA0089.severity = none
dotnet_diagnostic.MA0090.severity = none
dotnet_diagnostic.MA0091.severity = none
dotnet_diagnostic.MA0092.severity = none
dotnet_diagnostic.MA0093.severity = none
dotnet_diagnostic.MA0094.severity = none
dotnet_diagnostic.MA0095.severity = none
dotnet_diagnostic.MA0096.severity = none
dotnet_diagnostic.MA0097.severity = none
dotnet_diagnostic.MA0098.severity = none
dotnet_diagnostic.MA0099.severity = none
dotnet_diagnostic.MA0100.severity = none
dotnet_diagnostic.MA0101.severity = none
dotnet_diagnostic.MA0102.severity = none
dotnet_diagnostic.MA0103.severity = none
dotnet_diagnostic.MA0104.severity = none
dotnet_diagnostic.MA0105.severity = none
dotnet_diagnostic.MA0106.severity = none
dotnet_diagnostic.MA0107.severity = none
dotnet_diagnostic.MA0108.severity = none
dotnet_diagnostic.MA0109.severity = none
dotnet_diagnostic.MA0110.severity = none
dotnet_diagnostic.MA0111.severity = none
dotnet_diagnostic.MA0112.severity = none
dotnet_diagnostic.MA0113.severity = none
dotnet_diagnostic.MA0114.severity = none
dotnet_diagnostic.MA0115.severity = none
dotnet_diagnostic.MA0116.severity = none
dotnet_diagnostic.MA0117.severity = none
dotnet_diagnostic.MA0118.severity = none
dotnet_diagnostic.MA0119.severity = none
dotnet_diagnostic.MA0120.severity = none
dotnet_diagnostic.MA0121.severity = none
dotnet_diagnostic.MA0122.severity = none
dotnet_diagnostic.MA0123.severity = none
dotnet_diagnostic.MA0127.severity = none
dotnet_diagnostic.MA0128.severity = none
dotnet_diagnostic.MA0129.severity = none
dotnet_diagnostic.MA0130.severity = none
dotnet_diagnostic.MA0131.severity = none
dotnet_diagnostic.MA0132.severity = none
dotnet_diagnostic.MA0133.severity = none
dotnet_diagnostic.MA0134.severity = none
dotnet_diagnostic.MA0135.severity = none
dotnet_diagnostic.MA0136.severity = none
dotnet_diagnostic.MA0140.severity = none
dotnet_diagnostic.MA0141.severity = none
dotnet_diagnostic.MA0142.severity = none
dotnet_diagnostic.MA0143.severity = none
dotnet_diagnostic.MA0144.severity = none
dotnet_diagnostic.MA0145.severity = none
dotnet_diagnostic.MA0146.severity = none
dotnet_diagnostic.MA0147.severity = none
dotnet_diagnostic.MA0148.severity = none
dotnet_diagnostic.MA0149.severity = none
dotnet_diagnostic.MA0150.severity = none
dotnet_diagnostic.MA0151.severity = none
dotnet_diagnostic.MA0152.severity = none
dotnet_diagnostic.MA0153.severity = none
dotnet_diagnostic.MA0154.severity = none
##########################################
# Relaxdays inspection severities
##########################################
# Use default severities, overriding the global `warning` severity we set above
dotnet_analyzer_diagnostic.category-relaxdays.severity = default
# ReSharper properties
# For some see https://www.jetbrains.com/help/resharper/EditorConfig_Index.html
resharper_autodetect_indent_settings = false
resharper_blank_lines_around_auto_property = 1
resharper_blank_lines_around_property = 1
resharper_blank_lines_around_single_line_auto_property = 1
resharper_blank_lines_around_single_line_local_method = 1
# We require all of the `resharper_braces_for_*` to be consistent with SA1503
# See: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1503.md
resharper_braces_for_dowhile = required
resharper_braces_for_fixed = required
resharper_braces_for_for = required
resharper_braces_for_foreach = required
resharper_braces_for_ifelse = required
resharper_braces_for_lock = required
resharper_braces_for_using = required
resharper_braces_for_while = required
resharper_csharp_blank_lines_around_field = 1
resharper_csharp_blank_lines_around_invocable = 0
resharper_csharp_max_line_length = 120
resharper_csharp_naming_rule.constants = AA_BB
resharper_csharp_naming_rule.event = AaBb
resharper_csharp_naming_rule.local_constants = aaBb
resharper_csharp_naming_rule.method = AaBb
resharper_csharp_naming_rule.private_constants = AA_BB
resharper_csharp_naming_rule.private_instance_fields = _ + aaBb
resharper_csharp_naming_rule.private_static_fields = _ + aaBb
resharper_csharp_naming_rule.private_static_readonly = AaBb
resharper_csharp_naming_rule.property = AaBb
resharper_csharp_naming_rule.public_fields = AaBb
resharper_csharp_naming_rule.static_readonly = AaBb
resharper_csharp_naming_rule.types_and_namespaces = AaBb
resharper_csharp_wrap_before_binary_opsign = true
resharper_enforce_line_ending_style = true
resharper_for_built_in_types = use_var_when_evident
resharper_indent_nested_fixed_stmt = true
resharper_indent_nested_foreach_stmt = true
resharper_indent_nested_for_stmt = true
resharper_indent_nested_lock_stmt = true
resharper_indent_nested_usings_stmt = true
resharper_indent_nested_while_stmt = true
resharper_indent_typearg_angles = outside
resharper_keep_existing_declaration_block_arrangement = false
resharper_keep_existing_embedded_block_arrangement = true
resharper_keep_existing_enum_arrangement = true
resharper_new_line_before_while = false
resharper_place_expr_method_on_single_line = if_owner_is_single_line
resharper_place_expr_property_on_single_line = true
resharper_remove_blank_lines_near_braces_in_code = false
resharper_remove_blank_lines_near_braces_in_declarations = false
resharper_show_autodetect_configure_formatting_tip = false
resharper_space_within_empty_braces = false
resharper_use_heuristics_for_body_style = true
resharper_use_indent_from_vs = false
resharper_wrap_array_initializer_style = chop_if_long
resharper_wrap_before_arrow_with_expressions = true
resharper_wrap_before_linq_expression = true
resharper_wrap_linq_expressions = chop_if_long
resharper_wrap_object_and_collection_initializer_style = chop_if_long
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_parameters_style = chop_if_long

[resharper_]
csharp_keep_existing_declaration_parens_arrangement = false

# ReSharper inspection severities
resharper_arrange_constructor_or_destructor_body_highlighting = hint
resharper_arrange_redundant_parentheses_highlighting = suggestion
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_class_never_instantiated_global_highlighting = none
resharper_convert_nullable_to_short_form_highlighting = warning
resharper_double_negation_operator_highlighting = warning
resharper_inline_out_variable_declaration_highlighting = warning
resharper_log_message_is_sentence_problem_highlighting = hint
resharper_redundant_attribute_parentheses_highlighting = suggestion
resharper_redundant_base_qualifier_highlighting = warning
resharper_redundant_if_else_block_highlighting = hint
resharper_remove_redundant_braces_highlighting = hint
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_use_cancellation_token_for_i_async_enumerable_highlighting = hint
resharper_use_collection_count_property_highlighting = warning
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

# we want to show default_member sometimes
resharper_redundant_default_member_initializer_highlighting = none
dotnet_diagnostic.CA1805.severity = none

######################################
# XML Docs
# See https://www.jetbrains.com/help/resharper/EditorConfig_XMLDOC_XmlDocCodeStylePageSchema.html
######################################

# https://www.jetbrains.com/help/resharper/EditorConfig_XMLDOC_XmlDocCodeStylePageSchema.html#resharper_xmldoc_linebreaks_inside_tags_for_multiline_elements
xmldoc_linebreaks_inside_tags_for_multiline_elements = true
##########################################
# SonarLint Configuration
# Package: SonarAnalyzer.CSharp
# URLs: SXXXX -> https://rules.sonarsource.com/csharp/RSPEC-XXXX/
##########################################
# Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = none # we want to use boolean literals, e.g. "item.IsCancelled is false"
# Unused assignments should be removed
dotnet_diagnostic.1854.severity = none # there may be cases where we want to assign a value to a variable, but not use it, e.g. classes are references
# Boolean expressions should not be gratuitous (i.e. "obsolete")
dotnet_diagnostic.S2589.severity = none # there are multiple bugs/issues with this rule, which makes it noise
# "Find" method should be used instead of the "FirstOrDefault" extension
dotnet_diagnostic.S6602.severity = suggestion
# The collection-specific "TrueForAll" method should be used instead of the "All" extension
dotnet_diagnostic.S6603.severity = suggestion
# Collection-specific "Exists" method should be used instead of the "Any" extension
dotnet_diagnostic.S6605.severity = suggestion
# Prefer indexing instead of "Enumerable" methods on types implementing "IList"
dotnet_diagnostic.S6608.severity = suggestion
##########################################
# Style Cop Configuration
# Package: StyleCop.Analyzers
# URLs: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA{XXXX}.md
##########################################
# KeywordsMustBeSpacedCorrectly
dotnet_diagnostic.SA1000.severity = none # Will be fixed by formatter anyway
# ClosingParenthesisMustBeSpacedCorrectly
dotnet_diagnostic.SA1009.severity = none
# ClosingSquareBracketsMustBeSpacedCorrectly
dotnet_diagnostic.SA1011.severity = none
# CodeMustNotContainTrailingWhitespace
dotnet_diagnostic.SA1028.severity = none # Will be fixed by formatter anyway
# PrefixLocalCallsWithThis
dotnet_diagnostic.SA1101.severity = none
# UsingDirectivesMustBePlacedCorrectly
dotnet_diagnostic.SA1200.severity = none
# DeclarationKeywordsMustFollowOrder
dotnet_diagnostic.SA1206.severity = none # handled by other analyzers (and better!)
# FieldNamesMustNotBeginWithUnderscore
dotnet_diagnostic.SA1309.severity = none
# FieldNamesMustNotContainUnderscore
dotnet_diagnostic.SA1310.severity = none # This clashes with constants
# VariableNamesMustBeginWithLowerCaseLetter
dotnet_diagnostic.SA1312.severity = none # This is redundant to other analyzers and contains errors, hence disabled
# ParameterNamesMustBeginWithLowerCaseLetter
dotnet_diagnostic.SA1313.severity = none # This is redundant to other analyzers and contains errors (records), hence disabled
# ElementParametersMustBeDocumented
dotnet_diagnostic.SA1611.severity = none # Redundant to other analyzers
# ElementReturnValueMustBeDocumented
dotnet_diagnostic.SA1615.severity = none
# PropertySummaryDocumentationMustMatchAccessors
dotnet_diagnostic.SA1623.severity = none # Redundant to other analyzers
# FileMustHaveHeader
dotnet_diagnostic.SA1633.severity = none
# UseTrailingCommasInMultiLineInitializers
dotnet_diagnostic.SA1413.severity = none
# SingleLineCommentMustBePrecededByBlankLine
dotnet_diagnostic.SA1515.severity = none # We don't want this rule if e.g. we insert a comment in between LINQ lines
[*Tests.cs]

dotnet_diagnostic.CS8618.severity = silent
dotnet_diagnostic.CS1591.severity = silent
dotnet_diagnostic.CA1859.severity = none

##########################################
# License
##########################################
# The following applies as to the .editorconfig file ONLY, and is
# included below for reference, per the requirements of the license
# corresponding to this .editorconfig file.
# See: https://github.com/RehanSaeed/EditorConfig
#
# MIT License
#
# Copyright (c) 2017-2019 Muhammad Rehan Saeed
# Copyright (c) 2019 Henry Gabryjelski
#
# Permission is hereby granted, free of charge, to any
# person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the
# Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject
# to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
##########################################
